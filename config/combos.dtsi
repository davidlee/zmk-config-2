/*
 ╭─────────────────────────┬─────────────────────────╮
 │ LT5 LT4 LT3 LT2 LT1 LT0 │ RT0 RT1 RT2 RT3 RT4 RT5 │
 │ LM5 LM4 LM3 LM2 LM1 LM0 │ RM0 RM1 RM2 RM3 RM4 RM5 │
 │ LB5 LB4 LB3 LB2 LB1 LB0 │ RB0 RB1 RB2 RB3 RB4 RB5 │
 ╰───────────╮ LH2 LH1 LH0 │ RH0 RH1 RH2 ╭───────────╯
             ╰─────────────┴─────────────╯
*/

#define COMBO_TERM_FAST 20
#define COMBO_TERM_SLOW 30

#define COMBO_IDLE_FAST 20
#define COMBO_IDLE_SLOW 50

// ZMK_COMBO(combo_dictate,   DICTATION, LM4 LM0, ALL)
// ZMK_COMBO(combo_emdash,    EMDASH,     LM1 LM0, GAL CMK)
// ZMK_COMBO(combo_bs_word,   BSWORD,    RM1 RM2, ALL)
// ZMK_COMBO(combo_esc,       &kp ESC,   LM4 LM3, ALL)

// Combos overlapping HRMs are set up as hold-taps themselves to allow for instantaneous
// chording of mods. Custom hold-tap instances can be bootstrapped on the go using the
// 8-argument version of ZMK_COMBO defined in base.keymap.

// because                                      
ZMK_MACRO(minus, bindings = <&kp MINUS>;)
ZMK_MACRO(under, bindings = <&kp UNDERSCORE>;)

ZMK_MACRO(bs_word_a, bindings = <&kp LA(BSPC)>;)
ZMK_MACRO(bs_word_c, bindings = <&kp LC(BSPC)>;)

ZMK_MACRO(del, bindings = <&kp DEL>;)

// LEFT HAND
ZMK_COMBO(combo_minus,     &minus,    LM3 LM2, DEF NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST, LG(LALT), KEYS_R) 
ZMK_COMBO(combo_under,     &under,    LM2 LM1, DEF NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST, LS(LGUI), KEYS_R) 

ZMK_COMBO(combo_capsword, &caps_word, LM4 LM3, DEF, COMBO_TERM_FAST, COMBO_IDLE_FAST, LC(LALT),   KEYS_R) 
// ZMK_COMBO(combo_numword,   &num_word, LB4 LB3, DEF, COMBO_TERM_FAST, COMBO_IDLE_FAST)

ZMK_COMBO(combo_paren_l,   &kp LPAR,  LT3 LT2, DEF NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(combo_paren_r,   &kp RPAR,  LT2 LT1, DEF NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)

ZMK_COMBO(combo_lt,        &kp LT,    LT4 LT3, DEF NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(combo_gt,        &kp GT,    LT1 LT0, DEF NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)

ZMK_COMBO(combo_lbkt,      &kp LBKT,  LB3 LB2, DEF NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(combo_rbkt,      &kp RBKT,  LB2 LB1, DEF NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)

ZMK_COMBO(combo_brace_l,   &kp LBRC,  LB4 LB3, DEF NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(combo_brace_r,   &kp RBRC,  LB1 LB0, DEF NUM, COMBO_TERM_FAST, COMBO_IDLE_FAST)

// RIGHT HAND
ZMK_COMBO(bspc_word_a,     &bs_word_a,  RM1 RM2,  DEF, COMBO_TERM_FAST, COMBO_IDLE_FAST, LS(LGUI), KEYS_L)
ZMK_COMBO(bspc_word_c,     &bs_word_c,  RM3 RM4, DEF, COMBO_TERM_FAST, COMBO_IDLE_FAST, LC(LALT), KEYS_L)

ZMK_COMBO(combo_ent,       &kp ENTER, RB2 RB3, ALL, COMBO_TERM_FAST, COMBO_IDLE_FAST)
ZMK_COMBO(ldr,             &leader,   RM0 RM1, ALL, COMBO_TERM_FAST, COMBO_IDLE_FAST, LSHIFT, KEYS_L)
